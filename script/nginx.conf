cat <<'EOF' > /etc/nginx/conf.d/nezha.conf
server {
    listen 80;
    listen [::]:80;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name tz.fun513.com; # 替换为您的域名

    # 强制https
    if ($scheme = http) {
        return 301 https://$host$request_uri;
    }

    # SSL设置
    ssl_certificate     /etc/nginx/ssl/fun513.com/cert.pem;   # 证书路径
    ssl_certificate_key /etc/nginx/ssl/fun513.com/key.pem;    # 密钥路径
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_session_timeout 10m;
    ssl_session_cache shared:SSL:10m;
    ssl_buffer_size 8k;

    # 反向代理规则
    location ^~ / {
        proxy_pass http://127.0.0.1:8008;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header REMOTE-HOST $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection upgrade;
    }

    #禁止访问的文件或目录
    location ~ ^/(\.user.ini|\.htaccess|\.git|\.env|\.svn|\.project|LICENSE|README.md) {
        return 404;
    }
}
EOF


cat <<'EOF' > /var/dnmp/nginx/conf.d/v2board.conf
server {
    listen 80;
    listen [::]:80;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    root /var/www/v2board/public; #网站运行目录
    index index.html index.htm index.php default.html default.htm default.php;
    server_name v2.fun513.com v2.jrendsw.com fun513.xyz; # 网站域名

    # 强制https
    if ($scheme = http) {
        return 301 https://$host$request_uri;
    }

    # SSL设置
    ssl_certificate     /etc/nginx/ssl/fun513.com/cert.pem;   # 证书路径
    ssl_certificate_key /etc/nginx/ssl/fun513.com/key.pem;    # 密钥路径
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_session_timeout 10m;
    ssl_session_cache shared:SSL:10m;
    ssl_buffer_size 8k;

    # 伪静态
    location /downloads {
    }
    
    location / {  
        try_files $uri $uri/ /index.php$is_args$query_string;  
    }
    
    location ~ .*\.(js|css)?$
    {
        expires      1h;
        error_log off;
        access_log /dev/null; 
    }


    # php引用
    location ~* \.php$ {
        fastcgi_pass php8.1:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    # 禁止访问的文件或目录
    location ~ ^/(\.user.ini|\.htaccess|\.git|\.env|\.svn|\.project|LICENSE|README.md) {
        return 404;
    }
}
EOF


apt install php8.2-redis php8.2-mysqli php8.2-dom php8.2-gd php8.2-curl php8.2-bcmath php8.2-mbstring php8.2-zip -y


    #php引用
    location ~* \.php$ {
        fastcgi_pass unix:/run/php/php8.2-fpm.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
    


server {
    listen 80;
    listen [::]:80;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name tw.fun610.gq; # 替换为您的域名

    # 强制https
    if ($scheme = http) {
        return 301 https://$host$request_uri;
    }

    # SSL 设置
    ssl_certificate     /etc/ssl/tw.fun610.gq/cert.pem;   # 证书路径
    ssl_certificate_key /etc/ssl/tw.fun610.gq/key.pem;    # 密钥路径
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_session_timeout 10m;
    ssl_session_cache shared:SSL:10m;
    ssl_buffer_size 8k;

    # Vmess配置
    location /vm {
        proxy_redirect off;
        proxy_pass http://127.0.0.1:11111; # vmess端口
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Vless配置
    location /vl {
        proxy_redirect off;
        proxy_pass http://127.0.0.1:11112; # Vless端口
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    
    # Trojan配置
    location /tr {
        proxy_redirect off;
        proxy_pass http://127.0.0.1:11113; # Trojan端口
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # 伪装网站
    location / {
        proxy_pass https://pan.wzf2000.top; #伪装网址
        proxy_redirect off;
        proxy_ssl_server_name on;
        sub_filter_once off;
        sub_filter "pan.wzf2000.top" $server_name;
        proxy_set_header Host "pan.wzf2000.top";
        proxy_set_header Referer $http_referer;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header User-Agent $http_user_agent;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Accept-Encoding "";
        proxy_set_header Accept-Language "zh-CN";
    }
    
    #禁止访问的文件或目录
    location ~ ^/(\.user.ini|\.htaccess|\.git|\.env|\.svn|\.project|LICENSE|README.md) {
        return 404;
    }
}



**配置 a 机器（代理到 b 机器）：**
server {
    listen 11111 ssl http2;
    listen [::]:11111 ssl http2;
    server_name a.com;  # 域名，根据实际情况修改

    ssl_certificate     /etc/ssl/a.com/cert.pem;   # SSL 证书路径
    ssl_certificate_key /etc/ssl/a.com/key.pem;    # SSL 密钥路径
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_session_timeout 10m;
    ssl_session_cache shared:SSL:10m;
    ssl_buffer_size 8k;

    location / {
        proxy_redirect off;
        proxy_pass https://b.com:22222;  # b 机器的域名和端口
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

**配置 b 机器（代理到 c 机器）：**

server {
    listen 22222 ssl http2;
    listen [::]:22222 ssl http2;
    server_name b.com;  # 域名，根据实际情况修改

    ssl_certificate     /etc/ssl/b.com/cert.pem;   # SSL 证书路径
    ssl_certificate_key /etc/ssl/b.com/key.pem;    # SSL 密钥路径
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_session_timeout 10m;
    ssl_session_cache shared:SSL:10m;
    ssl_buffer_size 8k;

    location / {
        proxy_redirect off;
        proxy_pass https://c.com:33333;  # c 机器的域名和端口
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
